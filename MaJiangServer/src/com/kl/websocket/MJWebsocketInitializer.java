package com.kl.websocket;import io.netty.channel.ChannelInitializer;import io.netty.channel.ChannelPipeline;import io.netty.channel.socket.SocketChannel;import io.netty.handler.codec.http.HttpObjectAggregator;import io.netty.handler.codec.http.HttpServerCodec;import io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;import io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler;import io.netty.handler.ssl.SslContext;public class MJWebsocketInitializer extends ChannelInitializer<SocketChannel> {	@SuppressWarnings("unused")	private final SslContext sslCtx;	public MJWebsocketInitializer(SslContext sslCtx) 	{		this.sslCtx = sslCtx;	}		@Override	public void initChannel(SocketChannel ch) throws Exception 	{		ChannelPipeline pipeline = ch.pipeline();		pipeline.addLast(new HttpServerCodec());		pipeline.addLast(new HttpObjectAggregator(65536));		pipeline.addLast(new WebSocketServerCompressionHandler());		pipeline.addLast(new WebSocketServerProtocolHandler("/websocket", null, true));		pipeline.addLast(new MJWebSocketIndexPageHandler("/websocket"));		pipeline.addLast(new MJWebSocketFrameHandler());		}}